{"ast":null,"code":"import axios from 'axios';\nexport const GET_DOGS = 'GET_DOGS';\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME';\nexport const GET_TEMPERAMENTS = 'GET_TEMPERAMENTS';\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT';\n/* export const FILTER_CREATED = 'FILTER_CREATED'; */\n\nexport const SORT_BY_NAME = 'SORT_BY_NAME';\nexport const SORT_BY_WEIGHT = 'SORT_BY_WEIGHT';\nexport const GET_DETAILS = 'GET_DETAILS';\nexport const POST_DOGS = 'POST_DOGS';\nexport const GET_CLEAN = 'GET_CLEAN';\nexport function getDogs(name) {\n  return async function (dispatch) {\n    try {\n      if (name) {\n        const dogsName = await axios.get('http://localhost:3001/dogs?name=' + name);\n        return dispatch({\n          type: GET_DOGS_BY_NAME,\n          payload: dogsName.data\n        });\n        /* .then(res => dispatch({ type: GET_DOGS, payload: res.data }))\n        .catch(err => console.log(err)) */\n      }\n\n      const dogs = await axios.get('http://localhost:3001/dogs');\n      return dispatch({\n        type: GET_DOGS,\n        payload: dogs.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    try {\n      const temperaments = await axios.get('http://localhost:3001/temperaments');\n      return dispatch({\n        type: GET_TEMPERAMENTS,\n        payload: temperaments.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function sortByName(payload) {\n  return {\n    type: SORT_BY_NAME,\n    payload\n  };\n}\nexport function sortByWeight(payload) {\n  return {\n    type: SORT_BY_WEIGHT,\n    payload\n  };\n}\nexport function filterDogsByTemperament(payload) {\n  return {\n    type: FILTER_BY_TEMPERAMENT,\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: FILTER_CREATED,\n    payload\n  };\n}\nexport function postDog(payload) {\n  return async function (dispatch) {\n    const response = axios.post('http://localhost:3001/dogs');\n    console.log(response);\n    return {\n      type: POST_DOGS,\n      payload: response\n    };\n  };\n}\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get('http://localhost:3001/dogs/' + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: json.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}","map":{"version":3,"names":["axios","GET_DOGS","GET_DOGS_BY_NAME","GET_TEMPERAMENTS","FILTER_BY_TEMPERAMENT","SORT_BY_NAME","SORT_BY_WEIGHT","GET_DETAILS","POST_DOGS","GET_CLEAN","getDogs","name","dispatch","dogsName","get","type","payload","data","dogs","error","console","log","getTemperaments","temperaments","sortByName","sortByWeight","filterDogsByTemperament","filterCreated","FILTER_CREATED","postDog","response","post","getDetail","id","json","err"],"sources":["/home/pato/Escritorio/PI-Dogs-main/client/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GET_DOGS = 'GET_DOGS';\nexport const GET_DOGS_BY_NAME = 'GET_DOGS_BY_NAME';\nexport const GET_TEMPERAMENTS = 'GET_TEMPERAMENTS';\nexport const FILTER_BY_TEMPERAMENT = 'FILTER_BY_TEMPERAMENT';\n/* export const FILTER_CREATED = 'FILTER_CREATED'; */\n\nexport const SORT_BY_NAME = 'SORT_BY_NAME';\nexport const SORT_BY_WEIGHT = 'SORT_BY_WEIGHT';\nexport const GET_DETAILS = 'GET_DETAILS';\nexport const POST_DOGS = 'POST_DOGS';\nexport const GET_CLEAN = 'GET_CLEAN';\n\n\nexport function getDogs(name) {\n    return async function (dispatch) {\n        try {\n            if (name) {\n                const dogsName = await axios.get('http://localhost:3001/dogs?name=' + name)\n                return dispatch ({ \n                    type: GET_DOGS_BY_NAME, \n                    payload: dogsName.data })\n            \n                /* .then(res => dispatch({ type: GET_DOGS, payload: res.data }))\n                .catch(err => console.log(err)) */\n            }\n            const dogs = await axios.get('http://localhost:3001/dogs');\n            return dispatch({\n                type: GET_DOGS,\n                payload: dogs.data\n            })\n        } catch (error) {\n            console.log(error)\n            };\n        }\n    }\nexport function getTemperaments(){\n    return async function (dispatch){\n        try {\n            const temperaments = await axios.get('http://localhost:3001/temperaments');\n            \n            return dispatch({\n                type: GET_TEMPERAMENTS,\n                payload: temperaments.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport function sortByName(payload){\n    return {\n        type: SORT_BY_NAME,\n        payload\n    }\n}\n\nexport function sortByWeight(payload) {\n    return {\n        type: SORT_BY_WEIGHT,\n        payload\n    }\n}\n\nexport function filterDogsByTemperament(payload) {\n    return {\n        type: FILTER_BY_TEMPERAMENT,\n        payload\n    }\n}\n\nexport function filterCreated(payload) {\n    return {\n        type: FILTER_CREATED,\n        payload\n    }\n}\n\nexport function postDog(payload) {\n    return async function (dispatch) {\n        const response = axios.post('http://localhost:3001/dogs');\n        console.log(response);\n        return {\n            type: POST_DOGS,\n            payload: response\n\n        }\n    }\n}\n\nexport function getDetail(id) {\n    return async function (dispatch) {\n        try {\n            var json = await axios.get('http://localhost:3001/dogs/' + id);\n            return dispatch({\n                type: GET_DETAILS,\n                payload: json.data\n            })\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}